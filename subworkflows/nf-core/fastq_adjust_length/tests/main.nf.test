// todo nf-core: once you have added the required tests, please run the following command to build this file:
// nf-core subworkflows test fastq_adjust_length
nextflow_workflow {

    name "test subworkflow fastq_adjust_length"
    script "../main.nf"
    workflow "fastq_adjust_length"

    tag "subworkflows"
    tag "subworkflows_nfcore"
    tag "subworkflows/fastq_adjust_length"
    // todo nf-core: add tags for all modules used within this subworkflow. example:
    tag "seqkit"
    tag "seqkit/subseq"
    tag "seqkit/stats"


    // todo nf-core: change the test name preferably indicating the test-data and file-format used
    test("sarscov2 - fastq - single_end") {

        when {
            workflow {
                """
                // todo nf-core: define inputs of the workflow here. example:
                input[0] = channel.of([
                        [ id:'test', single_end:true ], // meta map
                        [ file(params.test_data['sarscov2']['illumina']['test_1_fastq_gz'], checkifexists: true) ]
                        ])
                input[1] = channel.of([ [1, 75, null, null] ])
                """
            }
        }

        then {
            assertall(
                { assert workflow.success},
                { assert snapshot(workflow.out).match()}
                //todo nf-core: add all required assertions to verify the test output.
            )
        }
    }

    test("sarscov2 - fastq - paired_end") {
        when {
            workflow {
                """
                // TODO nf-core: define inputs of the workflow here. Example:
                input[0] = Channel.of([
                        [ id:'test', single_end:false ], // meta map
                        [ file(params.test_data['sarscov2']['illumina']['test_1_fastq_gz'], checkIfExists: true),
                          file(params.test_data['sarscov2']['illumina']['test_2_fastq_gz'], checkIfExists: true)]
                        ])
                input[1] = Channel.of([ [1, 75, 1, 75] ])
                """
            }
        }

        then {
            assertAll(
                { assert workflow.success},
                { assert snapshot(workflow.out).match()}
                //TODO nf-core: Add all required assertions to verify the test output.
            )
        }
    }
}
